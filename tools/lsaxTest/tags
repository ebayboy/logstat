!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/34a41cc/
ParseLog	lsaxtest.cpp	/^static void ParseLog(string fname)$/;"	f	typeref:typename:void	file:
__anon8b6741ee0102	lsaxtest.cpp	/^        for_each(strs.begin(), strs.end(), [&](string x) -> void { cout << "[" << x << "]" << en/;"	f	function:ParseLog	typeref:typename:void	file:
cols	lsaxtest.cpp	/^vector<string> cols = {$/;"	v	typeref:typename:vector<string>
getCurrentTimeMsec	lsaxtest.cpp	/^string getCurrentTimeMsec()$/;"	f	typeref:typename:string
getLocalTime	lsaxtest.cpp	/^string getLocalTime()$/;"	f	typeref:typename:string
main	lsaxtest.cpp	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
stringSplit	lsaxtest.cpp	/^void stringSplit(string const s, string sep, vector<string> &strs)$/;"	f	typeref:typename:void
testCase	lsaxtest.cpp	/^int testCase(size_t hostSize, size_t ipSize, size_t ipQPS, string logfile)$/;"	f	typeref:typename:int
updateUsedCols	lsaxtest.cpp	/^void updateUsedCols(vector<int> usedColsIdx, vector<string> vals, vector<string> &strs)$/;"	f	typeref:typename:void
